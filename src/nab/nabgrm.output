Terminals unused in grammar

    SYM_ADDRESS
    SYM_ATTRIBUTE
    SYM_CALL
    SYM_DECL
    SYM_ERROR
    SYM_FOREACH
    SYM_INDEX
    SYM_INDIRECT
    SYM_LIST
    SYM_NEGATE
    SYM_PARM
    SYM_POINTS_TO
    SYM_STMTLIST
    SYM_TEST
    SYM_TYPE


State 110 conflicts: 1 shift/reduce
State 165 conflicts: 1 shift/reduce
State 234 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: defpart stmtpart

    2 defpart: defs
    3        | ε

    4 defs: def
    5     | def defs

    6 stmtpart: stmts
    7         | ε

    8 stmts: stmt
    9      | stmts stmt

   10 def: type_decl
   11    | var_decl
   12    | func_decl
   13    | func_def

   14 type_decl: struct_type SYM_SEMICOLON

   15 var_decl: type var_list SYM_SEMICOLON

   16 type: simple_type
   17     | struct_type

   18 simple_type: SYM_INT
   19            | SYM_SIZE_T
   20            | SYM_FLOAT
   21            | SYM_STRING
   22            | SYM_FILE
   23            | SYM_POINT
   24            | SYM_BOUNDS
   25            | SYM_MATRIX
   26            | SYM_ATOM
   27            | SYM_RESIDUE
   28            | SYM_MOLECULE

   29 struct_type: SYM_STRUCT id
   30            | SYM_STRUCT id SYM_LBRACE field_list SYM_RBRACE

   31 field_list: field
   32           | field field_list

   33 field: simple_type id_list SYM_SEMICOLON

   34 id_list: id
   35        | id SYM_COMMA id_list

   36 var_list: var
   37         | var SYM_COMMA var_list

   38 var: id
   39    | id SYM_LBRACK aspec SYM_RBRACK

   40 aspec: as_list
   41      | SYM_HASHED

   42 as_list: asize
   43        | asize SYM_COMMA as_list

   44 asize: expr
   45      | SYM_DYNAMIC

   46 func_decl: func_hdr SYM_SEMICOLON
   47          | func_hdr id SYM_SEMICOLON

   48 $@1: ε

   49 func_def: func_hdr $@1 func_body

   50 $@2: ε

   51 func_hdr: type id $@2 SYM_LPAREN formals SYM_RPAREN

   52 formals: fp_list
   53        | ε

   54 fp_list: f_parm
   55        | f_parm SYM_COMMA fp_list

   56 f_parm: type var

   57 $@3: ε

   58 $@4: ε

   59 $@5: ε

   60 func_body: SYM_LBRACE $@3 f_defpart $@4 f_stmtpart SYM_RBRACE $@5 SYM_SEMICOLON

   61 f_defpart: lv_decls
   62          | ε

   63 lv_decls: var_decl
   64         | lv_decls var_decl

   65 f_stmtpart: stmts
   66           | ε

   67 stmt: expr_stmt
   68     | alloc_stmt
   69     | assert_stmt
   70     | break_stmt
   71     | continue_stmt
   72     | cmpd_stmt
   73     | dealloc_stmt
   74     | debug_stmt
   75     | delete_stmt
   76     | for_stmt
   77     | if_stmt
   78     | return_stmt
   79     | while_stmt

   80 alloc_stmt: SYM_ALLOCATE expr SYM_SEMICOLON

   81 assert_stmt: SYM_ASSERT expr SYM_SEMICOLON

   82 break_stmt: SYM_BREAK SYM_SEMICOLON

   83 $@6: ε

   84 cmpd_stmt: SYM_LBRACE $@6 stmts SYM_RBRACE

   85 continue_stmt: SYM_CONTINUE SYM_SEMICOLON

   86 dealloc_stmt: SYM_DEALLOCATE expr SYM_SEMICOLON

   87 debug_stmt: SYM_DEBUG dbg_list SYM_SEMICOLON

   88 delete_stmt: SYM_DELETE expr SYM_SEMICOLON

   89 expr_stmt: expr SYM_SEMICOLON

   90 if_stmt: if_hdr stmt

   91 $@7: ε

   92 if_stmt: if_hdr stmt SYM_ELSE $@7 stmt

   93 for_stmt: for_hdr stmt

   94 $@8: ε

   95 $@9: ε

   96 return_stmt: SYM_RETURN $@8 expr $@9 SYM_SEMICOLON

   97 while_stmt: while_hdr stmt

   98 $@10: ε

   99 $@11: ε

  100 @12: ε

  101 if_hdr: SYM_IF $@10 SYM_LPAREN $@11 expr @12 SYM_RPAREN

  102 $@13: ε

  103 $@14: ε

  104 for_hdr: SYM_FOR $@13 SYM_LPAREN $@14 for_ctrl SYM_RPAREN

  105 for_ctrl: for_in
  106         | for_count

  107 for_in: id SYM_IN id

  108 $@15: ε

  109 $@16: ε

  110 for_count: for_expr SYM_SEMICOLON $@15 for_test_expr SYM_SEMICOLON $@16 for_expr

  111 for_expr: expr
  112         | ε

  113 for_test_expr: expr
  114              | ε

  115 $@17: ε

  116 $@18: ε

  117 @19: ε

  118 while_hdr: SYM_WHILE $@17 SYM_LPAREN $@18 expr @19 SYM_RPAREN

  119 dbg_list: SYM_LPAREN e_list SYM_RPAREN
  120         | e_list

  121 e_list: expr
  122       | expr SYM_COMMA e_list

  123 expr: rval
  124     | lval assignop expr

  125 lval: id
  126     | ar_lval
  127     | at_lval

  128 ar_lval: lval SYM_LBRACK i_list SYM_RBRACK

  129 at_lval: lval SYM_PERIOD SYM_IDENT

  130 rval: disj
  131     | disj SYM_OR rval

  132 disj: conj
  133     | conj SYM_AND disj

  134 conj: a_expr
  135     | a_expr relop a_expr

  136 a_expr: term
  137       | term addop a_expr

  138 term: factor
  139     | factor mulop term

  140 factor: primary
  141       | primary SYM_UPARROW factor

  142 primary: lval
  143        | num
  144        | string
  145        | incr
  146        | unop primary
  147        | id SYM_LPAREN actuals SYM_RPAREN
  148        | SYM_LPAREN expr SYM_RPAREN

  149 incr: incrop lval
  150     | lval incrop

  151 actuals: ap_list
  152        | ε

  153 ap_list: a_parm
  154        | a_parm SYM_COMMA ap_list

  155 a_parm: expr

  156 i_list: expr
  157       | expr SYM_COMMA i_list

  158 assignop: SYM_ASSIGN
  159         | SYM_PLUS_ASSIGN
  160         | SYM_MINUS_ASSIGN
  161         | SYM_STAR_ASSIGN
  162         | SYM_SLASH_ASSIGN
  163         | SYM_MODULUS_ASSIGN
  164         | SYM_UPARROW_ASSIGN

  165 relop: SYM_LESS
  166      | SYM_LESS_EQUAL
  167      | SYM_EQUAL
  168      | SYM_NOT_EQUAL
  169      | SYM_GREATER_EQUAL
  170      | SYM_GREATER
  171      | SYM_MATCH
  172      | SYM_DONT_MATCH
  173      | SYM_IN

  174 addop: SYM_PLUS
  175      | SYM_MINUS

  176 mulop: SYM_STAR
  177      | SYM_SLASH
  178      | SYM_MODULUS
  179      | SYM_ATSIGN

  180 incrop: SYM_PLUS_PLUS
  181       | SYM_MINUS_MINUS

  182 unop: SYM_MINUS
  183     | SYM_NOT

  184 id: SYM_IDENT

  185 num: SYM_INT_LIT
  186    | SYM_FLOAT_LIT

  187 string: SYM_STRING_LIT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    SYM_ADDRESS <ival> (258)
    SYM_ALLOCATE <ival> (259) 80
    SYM_AND <ival> (260) 133
    SYM_ASSERT <ival> (261) 81
    SYM_ASSIGN <ival> (262) 158
    SYM_ATOM <ival> (263) 26
    SYM_ATSIGN <ival> (264) 179
    SYM_ATTRIBUTE <ival> (265)
    SYM_BOUNDS <ival> (266) 24
    SYM_BREAK <ival> (267) 82
    SYM_CALL <ival> (268)
    SYM_COMMA <ival> (269) 35 37 43 55 122 154 157
    SYM_CONTINUE <ival> (270) 85
    SYM_DEALLOCATE <ival> (271) 86
    SYM_DEBUG <ival> (272) 87
    SYM_DECL <ival> (273)
    SYM_DELETE <ival> (274) 88
    SYM_DONT_MATCH <ival> (275) 172
    SYM_DYNAMIC <ival> (276) 45
    SYM_ELSE <ival> (277) 92
    SYM_EQUAL <ival> (278) 167
    SYM_ERROR <ival> (279)
    SYM_FILE <ival> (280) 22
    SYM_FLOAT <ival> (281) 20
    SYM_FLOAT_LIT <ival> (282) 186
    SYM_FOR <ival> (283) 104
    SYM_FOREACH <ival> (284)
    SYM_GREATER <ival> (285) 170
    SYM_GREATER_EQUAL <ival> (286) 169
    SYM_HASHED <ival> (287) 41
    SYM_IDENT <ival> (288) 129 184
    SYM_IF <ival> (289) 101
    SYM_IN <ival> (290) 107 173
    SYM_INDEX <ival> (291)
    SYM_INDIRECT <ival> (292)
    SYM_INT <ival> (293) 18
    SYM_INT_LIT <ival> (294) 185
    SYM_LBRACE <ival> (295) 30 60 84
    SYM_LBRACK <ival> (296) 39 128
    SYM_LESS <ival> (297) 165
    SYM_LESS_EQUAL <ival> (298) 166
    SYM_LIST <ival> (299)
    SYM_LPAREN <ival> (300) 51 101 104 118 119 147 148
    SYM_MATCH <ival> (301) 171
    SYM_MATRIX <ival> (302) 25
    SYM_MINUS <ival> (303) 175 182
    SYM_MINUS_ASSIGN <ival> (304) 160
    SYM_MINUS_MINUS <ival> (305) 181
    SYM_MODULUS <ival> (306) 178
    SYM_MODULUS_ASSIGN <ival> (307) 163
    SYM_MOLECULE <ival> (308) 28
    SYM_NEGATE <ival> (309)
    SYM_NOT <ival> (310) 183
    SYM_NOT_EQUAL <ival> (311) 168
    SYM_OR <ival> (312) 131
    SYM_PARM <ival> (313)
    SYM_PERIOD <ival> (314) 129
    SYM_PLUS <ival> (315) 174
    SYM_PLUS_ASSIGN <ival> (316) 159
    SYM_PLUS_PLUS <ival> (317) 180
    SYM_POINT <ival> (318) 23
    SYM_POINTS_TO <ival> (319)
    SYM_RBRACE <ival> (320) 30 60 84
    SYM_RBRACK <ival> (321) 39 128
    SYM_RESIDUE <ival> (322) 27
    SYM_RETURN <ival> (323) 96
    SYM_RPAREN <ival> (324) 51 101 104 118 119 147 148
    SYM_SEMICOLON <ival> (325) 14 15 33 46 47 60 80 81 82 85 86 87 88 89 96 110
    SYM_SIZE_T <ival> (326) 19
    SYM_SLASH <ival> (327) 177
    SYM_SLASH_ASSIGN <ival> (328) 162
    SYM_STAR <ival> (329) 176
    SYM_STAR_ASSIGN <ival> (330) 161
    SYM_STMTLIST <ival> (331)
    SYM_STRING <ival> (332) 21
    SYM_STRING_LIT <ival> (333) 187
    SYM_STRUCT <ival> (334) 29 30
    SYM_TEST <ival> (335)
    SYM_TYPE <ival> (336)
    SYM_UPARROW <ival> (337) 141
    SYM_UPARROW_ASSIGN <ival> (338) 164
    SYM_WHILE <ival> (339) 118


Nonterminals, with rules where they appear

    $accept (85)
        on left: 0
    program <npval> (86)
        on left: 1
        on right: 0
    defpart <npval> (87)
        on left: 2 3
        on right: 1
    defs <npval> (88)
        on left: 4 5
        on right: 2 5
    stmtpart <npval> (89)
        on left: 6 7
        on right: 1
    stmts <npval> (90)
        on left: 8 9
        on right: 6 9 65 84
    def <npval> (91)
        on left: 10 11 12 13
        on right: 4 5
    type_decl <npval> (92)
        on left: 14
        on right: 10
    var_decl <npval> (93)
        on left: 15
        on right: 11 63 64
    type <npval> (94)
        on left: 16 17
        on right: 15 51 56
    simple_type <npval> (95)
        on left: 18 19 20 21 22 23 24 25 26 27 28
        on right: 16 33
    struct_type <npval> (96)
        on left: 29 30
        on right: 14 17
    field_list <npval> (97)
        on left: 31 32
        on right: 30 32
    field <npval> (98)
        on left: 33
        on right: 31 32
    id_list <npval> (99)
        on left: 34 35
        on right: 33 35
    var_list <npval> (100)
        on left: 36 37
        on right: 15 37
    var <npval> (101)
        on left: 38 39
        on right: 36 37 56
    aspec <npval> (102)
        on left: 40 41
        on right: 39
    as_list <npval> (103)
        on left: 42 43
        on right: 40 43
    asize <npval> (104)
        on left: 44 45
        on right: 42 43
    func_decl <npval> (105)
        on left: 46 47
        on right: 12
    func_def <npval> (106)
        on left: 49
        on right: 13
    $@1 (107)
        on left: 48
        on right: 49
    func_hdr <npval> (108)
        on left: 51
        on right: 46 47 49
    $@2 (109)
        on left: 50
        on right: 51
    formals <npval> (110)
        on left: 52 53
        on right: 51
    fp_list <npval> (111)
        on left: 54 55
        on right: 52 55
    f_parm <npval> (112)
        on left: 56
        on right: 54 55
    func_body <npval> (113)
        on left: 60
        on right: 49
    $@3 (114)
        on left: 57
        on right: 60
    $@4 (115)
        on left: 58
        on right: 60
    $@5 (116)
        on left: 59
        on right: 60
    f_defpart <npval> (117)
        on left: 61 62
        on right: 60
    lv_decls <npval> (118)
        on left: 63 64
        on right: 61 64
    f_stmtpart <npval> (119)
        on left: 65 66
        on right: 60
    stmt <npval> (120)
        on left: 67 68 69 70 71 72 73 74 75 76 77 78 79
        on right: 8 9 90 92 93 97
    alloc_stmt <npval> (121)
        on left: 80
        on right: 68
    assert_stmt <npval> (122)
        on left: 81
        on right: 69
    break_stmt <npval> (123)
        on left: 82
        on right: 70
    cmpd_stmt <npval> (124)
        on left: 84
        on right: 72
    $@6 (125)
        on left: 83
        on right: 84
    continue_stmt <npval> (126)
        on left: 85
        on right: 71
    dealloc_stmt <npval> (127)
        on left: 86
        on right: 73
    debug_stmt <npval> (128)
        on left: 87
        on right: 74
    delete_stmt <npval> (129)
        on left: 88
        on right: 75
    expr_stmt <npval> (130)
        on left: 89
        on right: 67
    if_stmt <npval> (131)
        on left: 90 92
        on right: 77
    $@7 (132)
        on left: 91
        on right: 92
    for_stmt <npval> (133)
        on left: 93
        on right: 76
    return_stmt <npval> (134)
        on left: 96
        on right: 78
    $@8 (135)
        on left: 94
        on right: 96
    $@9 (136)
        on left: 95
        on right: 96
    while_stmt <npval> (137)
        on left: 97
        on right: 79
    if_hdr <npval> (138)
        on left: 101
        on right: 90 92
    $@10 (139)
        on left: 98
        on right: 101
    $@11 (140)
        on left: 99
        on right: 101
    @12 (141)
        on left: 100
        on right: 101
    for_hdr <npval> (142)
        on left: 104
        on right: 93
    $@13 (143)
        on left: 102
        on right: 104
    $@14 (144)
        on left: 103
        on right: 104
    for_ctrl <npval> (145)
        on left: 105 106
        on right: 104
    for_in <npval> (146)
        on left: 107
        on right: 105
    for_count <npval> (147)
        on left: 110
        on right: 106
    $@15 (148)
        on left: 108
        on right: 110
    $@16 (149)
        on left: 109
        on right: 110
    for_expr <npval> (150)
        on left: 111 112
        on right: 110
    for_test_expr <npval> (151)
        on left: 113 114
        on right: 110
    while_hdr <npval> (152)
        on left: 118
        on right: 97
    $@17 (153)
        on left: 115
        on right: 118
    $@18 (154)
        on left: 116
        on right: 118
    @19 (155)
        on left: 117
        on right: 118
    dbg_list <npval> (156)
        on left: 119 120
        on right: 87
    e_list <npval> (157)
        on left: 121 122
        on right: 119 120 122
    expr <npval> (158)
        on left: 123 124
        on right: 44 80 81 86 88 89 96 101 111 113 118 121 122 124 148 155 156 157
    lval <npval> (159)
        on left: 125 126 127
        on right: 124 128 129 142 149 150
    ar_lval <npval> (160)
        on left: 128
        on right: 126
    at_lval <npval> (161)
        on left: 129
        on right: 127
    rval <npval> (162)
        on left: 130 131
        on right: 123 131
    disj <npval> (163)
        on left: 132 133
        on right: 130 131 133
    conj <npval> (164)
        on left: 134 135
        on right: 132 133
    a_expr <npval> (165)
        on left: 136 137
        on right: 134 135 137
    term <npval> (166)
        on left: 138 139
        on right: 136 137 139
    factor <npval> (167)
        on left: 140 141
        on right: 138 139 141
    primary <npval> (168)
        on left: 142 143 144 145 146 147 148
        on right: 140 141 146
    incr <npval> (169)
        on left: 149 150
        on right: 145
    actuals <npval> (170)
        on left: 151 152
        on right: 147
    ap_list <npval> (171)
        on left: 153 154
        on right: 151 154
    a_parm <npval> (172)
        on left: 155
        on right: 153 154
    i_list <npval> (173)
        on left: 156 157
        on right: 128 157
    assignop <npval> (174)
        on left: 158 159 160 161 162 163 164
        on right: 124
    relop <npval> (175)
        on left: 165 166 167 168 169 170 171 172 173
        on right: 135
    addop <npval> (176)
        on left: 174 175
        on right: 137
    mulop <npval> (177)
        on left: 176 177 178 179
        on right: 139
    incrop <npval> (178)
        on left: 180 181
        on right: 149 150
    unop <npval> (179)
        on left: 182 183
        on right: 146
    id <npval> (180)
        on left: 184
        on right: 29 30 34 35 38 39 47 51 107 125 147
    num <npval> (181)
        on left: 185 186
        on right: 143
    string <npval> (182)
        on left: 187
        on right: 144


State 0

    0 $accept: • program $end

    SYM_ATOM      shift, and go to state 1
    SYM_BOUNDS    shift, and go to state 2
    SYM_FILE      shift, and go to state 3
    SYM_FLOAT     shift, and go to state 4
    SYM_INT       shift, and go to state 5
    SYM_MATRIX    shift, and go to state 6
    SYM_MOLECULE  shift, and go to state 7
    SYM_POINT     shift, and go to state 8
    SYM_RESIDUE   shift, and go to state 9
    SYM_SIZE_T    shift, and go to state 10
    SYM_STRING    shift, and go to state 11
    SYM_STRUCT    shift, and go to state 12

    $default  reduce using rule 3 (defpart)

    program      go to state 13
    defpart      go to state 14
    defs         go to state 15
    def          go to state 16
    type_decl    go to state 17
    var_decl     go to state 18
    type         go to state 19
    simple_type  go to state 20
    struct_type  go to state 21
    func_decl    go to state 22
    func_def     go to state 23
    func_hdr     go to state 24


State 1

   26 simple_type: SYM_ATOM •

    $default  reduce using rule 26 (simple_type)


State 2

   24 simple_type: SYM_BOUNDS •

    $default  reduce using rule 24 (simple_type)


State 3

   22 simple_type: SYM_FILE •

    $default  reduce using rule 22 (simple_type)


State 4

   20 simple_type: SYM_FLOAT •

    $default  reduce using rule 20 (simple_type)


State 5

   18 simple_type: SYM_INT •

    $default  reduce using rule 18 (simple_type)


State 6

   25 simple_type: SYM_MATRIX •

    $default  reduce using rule 25 (simple_type)


State 7

   28 simple_type: SYM_MOLECULE •

    $default  reduce using rule 28 (simple_type)


State 8

   23 simple_type: SYM_POINT •

    $default  reduce using rule 23 (simple_type)


State 9

   27 simple_type: SYM_RESIDUE •

    $default  reduce using rule 27 (simple_type)


State 10

   19 simple_type: SYM_SIZE_T •

    $default  reduce using rule 19 (simple_type)


State 11

   21 simple_type: SYM_STRING •

    $default  reduce using rule 21 (simple_type)


State 12

   29 struct_type: SYM_STRUCT • id
   30            | SYM_STRUCT • id SYM_LBRACE field_list SYM_RBRACE

    SYM_IDENT  shift, and go to state 25

    id  go to state 26


State 13

    0 $accept: program • $end

    $end  shift, and go to state 27


State 14

    1 program: defpart • stmtpart

    SYM_ALLOCATE     shift, and go to state 28
    SYM_ASSERT       shift, and go to state 29
    SYM_BREAK        shift, and go to state 30
    SYM_CONTINUE     shift, and go to state 31
    SYM_DEALLOCATE   shift, and go to state 32
    SYM_DEBUG        shift, and go to state 33
    SYM_DELETE       shift, and go to state 34
    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_FOR          shift, and go to state 36
    SYM_IDENT        shift, and go to state 25
    SYM_IF           shift, and go to state 37
    SYM_INT_LIT      shift, and go to state 38
    SYM_LBRACE       shift, and go to state 39
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_RETURN       shift, and go to state 45
    SYM_STRING_LIT   shift, and go to state 46
    SYM_WHILE        shift, and go to state 47

    $default  reduce using rule 7 (stmtpart)

    stmtpart       go to state 48
    stmts          go to state 49
    stmt           go to state 50
    alloc_stmt     go to state 51
    assert_stmt    go to state 52
    break_stmt     go to state 53
    cmpd_stmt      go to state 54
    continue_stmt  go to state 55
    dealloc_stmt   go to state 56
    debug_stmt     go to state 57
    delete_stmt    go to state 58
    expr_stmt      go to state 59
    if_stmt        go to state 60
    for_stmt       go to state 61
    return_stmt    go to state 62
    while_stmt     go to state 63
    if_hdr         go to state 64
    for_hdr        go to state 65
    while_hdr      go to state 66
    expr           go to state 67
    lval           go to state 68
    ar_lval        go to state 69
    at_lval        go to state 70
    rval           go to state 71
    disj           go to state 72
    conj           go to state 73
    a_expr         go to state 74
    term           go to state 75
    factor         go to state 76
    primary        go to state 77
    incr           go to state 78
    incrop         go to state 79
    unop           go to state 80
    id             go to state 81
    num            go to state 82
    string         go to state 83


State 15

    2 defpart: defs •

    $default  reduce using rule 2 (defpart)


State 16

    4 defs: def •
    5     | def • defs

    SYM_ATOM      shift, and go to state 1
    SYM_BOUNDS    shift, and go to state 2
    SYM_FILE      shift, and go to state 3
    SYM_FLOAT     shift, and go to state 4
    SYM_INT       shift, and go to state 5
    SYM_MATRIX    shift, and go to state 6
    SYM_MOLECULE  shift, and go to state 7
    SYM_POINT     shift, and go to state 8
    SYM_RESIDUE   shift, and go to state 9
    SYM_SIZE_T    shift, and go to state 10
    SYM_STRING    shift, and go to state 11
    SYM_STRUCT    shift, and go to state 12

    $default  reduce using rule 4 (defs)

    defs         go to state 84
    def          go to state 16
    type_decl    go to state 17
    var_decl     go to state 18
    type         go to state 19
    simple_type  go to state 20
    struct_type  go to state 21
    func_decl    go to state 22
    func_def     go to state 23
    func_hdr     go to state 24


State 17

   10 def: type_decl •

    $default  reduce using rule 10 (def)


State 18

   11 def: var_decl •

    $default  reduce using rule 11 (def)


State 19

   15 var_decl: type • var_list SYM_SEMICOLON
   51 func_hdr: type • id $@2 SYM_LPAREN formals SYM_RPAREN

    SYM_IDENT  shift, and go to state 25

    var_list  go to state 85
    var       go to state 86
    id        go to state 87


State 20

   16 type: simple_type •

    $default  reduce using rule 16 (type)


State 21

   14 type_decl: struct_type • SYM_SEMICOLON
   17 type: struct_type •

    SYM_SEMICOLON  shift, and go to state 88

    $default  reduce using rule 17 (type)


State 22

   12 def: func_decl •

    $default  reduce using rule 12 (def)


State 23

   13 def: func_def •

    $default  reduce using rule 13 (def)


State 24

   46 func_decl: func_hdr • SYM_SEMICOLON
   47          | func_hdr • id SYM_SEMICOLON
   49 func_def: func_hdr • $@1 func_body

    SYM_IDENT      shift, and go to state 25
    SYM_SEMICOLON  shift, and go to state 89

    $default  reduce using rule 48 ($@1)

    $@1  go to state 90
    id   go to state 91


State 25

  184 id: SYM_IDENT •

    $default  reduce using rule 184 (id)


State 26

   29 struct_type: SYM_STRUCT id •
   30            | SYM_STRUCT id • SYM_LBRACE field_list SYM_RBRACE

    SYM_LBRACE  shift, and go to state 92

    $default  reduce using rule 29 (struct_type)


State 27

    0 $accept: program $end •

    $default  accept


State 28

   80 alloc_stmt: SYM_ALLOCATE • expr SYM_SEMICOLON

    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    expr     go to state 93
    lval     go to state 68
    ar_lval  go to state 69
    at_lval  go to state 70
    rval     go to state 71
    disj     go to state 72
    conj     go to state 73
    a_expr   go to state 74
    term     go to state 75
    factor   go to state 76
    primary  go to state 77
    incr     go to state 78
    incrop   go to state 79
    unop     go to state 80
    id       go to state 81
    num      go to state 82
    string   go to state 83


State 29

   81 assert_stmt: SYM_ASSERT • expr SYM_SEMICOLON

    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    expr     go to state 94
    lval     go to state 68
    ar_lval  go to state 69
    at_lval  go to state 70
    rval     go to state 71
    disj     go to state 72
    conj     go to state 73
    a_expr   go to state 74
    term     go to state 75
    factor   go to state 76
    primary  go to state 77
    incr     go to state 78
    incrop   go to state 79
    unop     go to state 80
    id       go to state 81
    num      go to state 82
    string   go to state 83


State 30

   82 break_stmt: SYM_BREAK • SYM_SEMICOLON

    SYM_SEMICOLON  shift, and go to state 95


State 31

   85 continue_stmt: SYM_CONTINUE • SYM_SEMICOLON

    SYM_SEMICOLON  shift, and go to state 96


State 32

   86 dealloc_stmt: SYM_DEALLOCATE • expr SYM_SEMICOLON

    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    expr     go to state 97
    lval     go to state 68
    ar_lval  go to state 69
    at_lval  go to state 70
    rval     go to state 71
    disj     go to state 72
    conj     go to state 73
    a_expr   go to state 74
    term     go to state 75
    factor   go to state 76
    primary  go to state 77
    incr     go to state 78
    incrop   go to state 79
    unop     go to state 80
    id       go to state 81
    num      go to state 82
    string   go to state 83


State 33

   87 debug_stmt: SYM_DEBUG • dbg_list SYM_SEMICOLON

    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 98
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    dbg_list  go to state 99
    e_list    go to state 100
    expr      go to state 101
    lval      go to state 68
    ar_lval   go to state 69
    at_lval   go to state 70
    rval      go to state 71
    disj      go to state 72
    conj      go to state 73
    a_expr    go to state 74
    term      go to state 75
    factor    go to state 76
    primary   go to state 77
    incr      go to state 78
    incrop    go to state 79
    unop      go to state 80
    id        go to state 81
    num       go to state 82
    string    go to state 83


State 34

   88 delete_stmt: SYM_DELETE • expr SYM_SEMICOLON

    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    expr     go to state 102
    lval     go to state 68
    ar_lval  go to state 69
    at_lval  go to state 70
    rval     go to state 71
    disj     go to state 72
    conj     go to state 73
    a_expr   go to state 74
    term     go to state 75
    factor   go to state 76
    primary  go to state 77
    incr     go to state 78
    incrop   go to state 79
    unop     go to state 80
    id       go to state 81
    num      go to state 82
    string   go to state 83


State 35

  186 num: SYM_FLOAT_LIT •

    $default  reduce using rule 186 (num)


State 36

  104 for_hdr: SYM_FOR • $@13 SYM_LPAREN $@14 for_ctrl SYM_RPAREN

    $default  reduce using rule 102 ($@13)

    $@13  go to state 103


State 37

  101 if_hdr: SYM_IF • $@10 SYM_LPAREN $@11 expr @12 SYM_RPAREN

    $default  reduce using rule 98 ($@10)

    $@10  go to state 104


State 38

  185 num: SYM_INT_LIT •

    $default  reduce using rule 185 (num)


State 39

   84 cmpd_stmt: SYM_LBRACE • $@6 stmts SYM_RBRACE

    $default  reduce using rule 83 ($@6)

    $@6  go to state 105


State 40

  148 primary: SYM_LPAREN • expr SYM_RPAREN

    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    expr     go to state 106
    lval     go to state 68
    ar_lval  go to state 69
    at_lval  go to state 70
    rval     go to state 71
    disj     go to state 72
    conj     go to state 73
    a_expr   go to state 74
    term     go to state 75
    factor   go to state 76
    primary  go to state 77
    incr     go to state 78
    incrop   go to state 79
    unop     go to state 80
    id       go to state 81
    num      go to state 82
    string   go to state 83


State 41

  182 unop: SYM_MINUS •

    $default  reduce using rule 182 (unop)


State 42

  181 incrop: SYM_MINUS_MINUS •

    $default  reduce using rule 181 (incrop)


State 43

  183 unop: SYM_NOT •

    $default  reduce using rule 183 (unop)


State 44

  180 incrop: SYM_PLUS_PLUS •

    $default  reduce using rule 180 (incrop)


State 45

   96 return_stmt: SYM_RETURN • $@8 expr $@9 SYM_SEMICOLON

    $default  reduce using rule 94 ($@8)

    $@8  go to state 107


State 46

  187 string: SYM_STRING_LIT •

    $default  reduce using rule 187 (string)


State 47

  118 while_hdr: SYM_WHILE • $@17 SYM_LPAREN $@18 expr @19 SYM_RPAREN

    $default  reduce using rule 115 ($@17)

    $@17  go to state 108


State 48

    1 program: defpart stmtpart •

    $default  reduce using rule 1 (program)


State 49

    6 stmtpart: stmts •
    9 stmts: stmts • stmt

    SYM_ALLOCATE     shift, and go to state 28
    SYM_ASSERT       shift, and go to state 29
    SYM_BREAK        shift, and go to state 30
    SYM_CONTINUE     shift, and go to state 31
    SYM_DEALLOCATE   shift, and go to state 32
    SYM_DEBUG        shift, and go to state 33
    SYM_DELETE       shift, and go to state 34
    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_FOR          shift, and go to state 36
    SYM_IDENT        shift, and go to state 25
    SYM_IF           shift, and go to state 37
    SYM_INT_LIT      shift, and go to state 38
    SYM_LBRACE       shift, and go to state 39
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_RETURN       shift, and go to state 45
    SYM_STRING_LIT   shift, and go to state 46
    SYM_WHILE        shift, and go to state 47

    $default  reduce using rule 6 (stmtpart)

    stmt           go to state 109
    alloc_stmt     go to state 51
    assert_stmt    go to state 52
    break_stmt     go to state 53
    cmpd_stmt      go to state 54
    continue_stmt  go to state 55
    dealloc_stmt   go to state 56
    debug_stmt     go to state 57
    delete_stmt    go to state 58
    expr_stmt      go to state 59
    if_stmt        go to state 60
    for_stmt       go to state 61
    return_stmt    go to state 62
    while_stmt     go to state 63
    if_hdr         go to state 64
    for_hdr        go to state 65
    while_hdr      go to state 66
    expr           go to state 67
    lval           go to state 68
    ar_lval        go to state 69
    at_lval        go to state 70
    rval           go to state 71
    disj           go to state 72
    conj           go to state 73
    a_expr         go to state 74
    term           go to state 75
    factor         go to state 76
    primary        go to state 77
    incr           go to state 78
    incrop         go to state 79
    unop           go to state 80
    id             go to state 81
    num            go to state 82
    string         go to state 83


State 50

    8 stmts: stmt •

    $default  reduce using rule 8 (stmts)


State 51

   68 stmt: alloc_stmt •

    $default  reduce using rule 68 (stmt)


State 52

   69 stmt: assert_stmt •

    $default  reduce using rule 69 (stmt)


State 53

   70 stmt: break_stmt •

    $default  reduce using rule 70 (stmt)


State 54

   72 stmt: cmpd_stmt •

    $default  reduce using rule 72 (stmt)


State 55

   71 stmt: continue_stmt •

    $default  reduce using rule 71 (stmt)


State 56

   73 stmt: dealloc_stmt •

    $default  reduce using rule 73 (stmt)


State 57

   74 stmt: debug_stmt •

    $default  reduce using rule 74 (stmt)


State 58

   75 stmt: delete_stmt •

    $default  reduce using rule 75 (stmt)


State 59

   67 stmt: expr_stmt •

    $default  reduce using rule 67 (stmt)


State 60

   77 stmt: if_stmt •

    $default  reduce using rule 77 (stmt)


State 61

   76 stmt: for_stmt •

    $default  reduce using rule 76 (stmt)


State 62

   78 stmt: return_stmt •

    $default  reduce using rule 78 (stmt)


State 63

   79 stmt: while_stmt •

    $default  reduce using rule 79 (stmt)


State 64

   90 if_stmt: if_hdr • stmt
   92        | if_hdr • stmt SYM_ELSE $@7 stmt

    SYM_ALLOCATE     shift, and go to state 28
    SYM_ASSERT       shift, and go to state 29
    SYM_BREAK        shift, and go to state 30
    SYM_CONTINUE     shift, and go to state 31
    SYM_DEALLOCATE   shift, and go to state 32
    SYM_DEBUG        shift, and go to state 33
    SYM_DELETE       shift, and go to state 34
    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_FOR          shift, and go to state 36
    SYM_IDENT        shift, and go to state 25
    SYM_IF           shift, and go to state 37
    SYM_INT_LIT      shift, and go to state 38
    SYM_LBRACE       shift, and go to state 39
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_RETURN       shift, and go to state 45
    SYM_STRING_LIT   shift, and go to state 46
    SYM_WHILE        shift, and go to state 47

    stmt           go to state 110
    alloc_stmt     go to state 51
    assert_stmt    go to state 52
    break_stmt     go to state 53
    cmpd_stmt      go to state 54
    continue_stmt  go to state 55
    dealloc_stmt   go to state 56
    debug_stmt     go to state 57
    delete_stmt    go to state 58
    expr_stmt      go to state 59
    if_stmt        go to state 60
    for_stmt       go to state 61
    return_stmt    go to state 62
    while_stmt     go to state 63
    if_hdr         go to state 64
    for_hdr        go to state 65
    while_hdr      go to state 66
    expr           go to state 67
    lval           go to state 68
    ar_lval        go to state 69
    at_lval        go to state 70
    rval           go to state 71
    disj           go to state 72
    conj           go to state 73
    a_expr         go to state 74
    term           go to state 75
    factor         go to state 76
    primary        go to state 77
    incr           go to state 78
    incrop         go to state 79
    unop           go to state 80
    id             go to state 81
    num            go to state 82
    string         go to state 83


State 65

   93 for_stmt: for_hdr • stmt

    SYM_ALLOCATE     shift, and go to state 28
    SYM_ASSERT       shift, and go to state 29
    SYM_BREAK        shift, and go to state 30
    SYM_CONTINUE     shift, and go to state 31
    SYM_DEALLOCATE   shift, and go to state 32
    SYM_DEBUG        shift, and go to state 33
    SYM_DELETE       shift, and go to state 34
    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_FOR          shift, and go to state 36
    SYM_IDENT        shift, and go to state 25
    SYM_IF           shift, and go to state 37
    SYM_INT_LIT      shift, and go to state 38
    SYM_LBRACE       shift, and go to state 39
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_RETURN       shift, and go to state 45
    SYM_STRING_LIT   shift, and go to state 46
    SYM_WHILE        shift, and go to state 47

    stmt           go to state 111
    alloc_stmt     go to state 51
    assert_stmt    go to state 52
    break_stmt     go to state 53
    cmpd_stmt      go to state 54
    continue_stmt  go to state 55
    dealloc_stmt   go to state 56
    debug_stmt     go to state 57
    delete_stmt    go to state 58
    expr_stmt      go to state 59
    if_stmt        go to state 60
    for_stmt       go to state 61
    return_stmt    go to state 62
    while_stmt     go to state 63
    if_hdr         go to state 64
    for_hdr        go to state 65
    while_hdr      go to state 66
    expr           go to state 67
    lval           go to state 68
    ar_lval        go to state 69
    at_lval        go to state 70
    rval           go to state 71
    disj           go to state 72
    conj           go to state 73
    a_expr         go to state 74
    term           go to state 75
    factor         go to state 76
    primary        go to state 77
    incr           go to state 78
    incrop         go to state 79
    unop           go to state 80
    id             go to state 81
    num            go to state 82
    string         go to state 83


State 66

   97 while_stmt: while_hdr • stmt

    SYM_ALLOCATE     shift, and go to state 28
    SYM_ASSERT       shift, and go to state 29
    SYM_BREAK        shift, and go to state 30
    SYM_CONTINUE     shift, and go to state 31
    SYM_DEALLOCATE   shift, and go to state 32
    SYM_DEBUG        shift, and go to state 33
    SYM_DELETE       shift, and go to state 34
    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_FOR          shift, and go to state 36
    SYM_IDENT        shift, and go to state 25
    SYM_IF           shift, and go to state 37
    SYM_INT_LIT      shift, and go to state 38
    SYM_LBRACE       shift, and go to state 39
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_RETURN       shift, and go to state 45
    SYM_STRING_LIT   shift, and go to state 46
    SYM_WHILE        shift, and go to state 47

    stmt           go to state 112
    alloc_stmt     go to state 51
    assert_stmt    go to state 52
    break_stmt     go to state 53
    cmpd_stmt      go to state 54
    continue_stmt  go to state 55
    dealloc_stmt   go to state 56
    debug_stmt     go to state 57
    delete_stmt    go to state 58
    expr_stmt      go to state 59
    if_stmt        go to state 60
    for_stmt       go to state 61
    return_stmt    go to state 62
    while_stmt     go to state 63
    if_hdr         go to state 64
    for_hdr        go to state 65
    while_hdr      go to state 66
    expr           go to state 67
    lval           go to state 68
    ar_lval        go to state 69
    at_lval        go to state 70
    rval           go to state 71
    disj           go to state 72
    conj           go to state 73
    a_expr         go to state 74
    term           go to state 75
    factor         go to state 76
    primary        go to state 77
    incr           go to state 78
    incrop         go to state 79
    unop           go to state 80
    id             go to state 81
    num            go to state 82
    string         go to state 83


State 67

   89 expr_stmt: expr • SYM_SEMICOLON

    SYM_SEMICOLON  shift, and go to state 113


State 68

  124 expr: lval • assignop expr
  128 ar_lval: lval • SYM_LBRACK i_list SYM_RBRACK
  129 at_lval: lval • SYM_PERIOD SYM_IDENT
  142 primary: lval •
  150 incr: lval • incrop

    SYM_ASSIGN          shift, and go to state 114
    SYM_LBRACK          shift, and go to state 115
    SYM_MINUS_ASSIGN    shift, and go to state 116
    SYM_MINUS_MINUS     shift, and go to state 42
    SYM_MODULUS_ASSIGN  shift, and go to state 117
    SYM_PERIOD          shift, and go to state 118
    SYM_PLUS_ASSIGN     shift, and go to state 119
    SYM_PLUS_PLUS       shift, and go to state 44
    SYM_SLASH_ASSIGN    shift, and go to state 120
    SYM_STAR_ASSIGN     shift, and go to state 121
    SYM_UPARROW_ASSIGN  shift, and go to state 122

    $default  reduce using rule 142 (primary)

    assignop  go to state 123
    incrop    go to state 124


State 69

  126 lval: ar_lval •

    $default  reduce using rule 126 (lval)


State 70

  127 lval: at_lval •

    $default  reduce using rule 127 (lval)


State 71

  123 expr: rval •

    $default  reduce using rule 123 (expr)


State 72

  130 rval: disj •
  131     | disj • SYM_OR rval

    SYM_OR  shift, and go to state 125

    $default  reduce using rule 130 (rval)


State 73

  132 disj: conj •
  133     | conj • SYM_AND disj

    SYM_AND  shift, and go to state 126

    $default  reduce using rule 132 (disj)


State 74

  134 conj: a_expr •
  135     | a_expr • relop a_expr

    SYM_DONT_MATCH     shift, and go to state 127
    SYM_EQUAL          shift, and go to state 128
    SYM_GREATER        shift, and go to state 129
    SYM_GREATER_EQUAL  shift, and go to state 130
    SYM_IN             shift, and go to state 131
    SYM_LESS           shift, and go to state 132
    SYM_LESS_EQUAL     shift, and go to state 133
    SYM_MATCH          shift, and go to state 134
    SYM_NOT_EQUAL      shift, and go to state 135

    $default  reduce using rule 134 (conj)

    relop  go to state 136


State 75

  136 a_expr: term •
  137       | term • addop a_expr

    SYM_MINUS  shift, and go to state 137
    SYM_PLUS   shift, and go to state 138

    $default  reduce using rule 136 (a_expr)

    addop  go to state 139


State 76

  138 term: factor •
  139     | factor • mulop term

    SYM_ATSIGN   shift, and go to state 140
    SYM_MODULUS  shift, and go to state 141
    SYM_SLASH    shift, and go to state 142
    SYM_STAR     shift, and go to state 143

    $default  reduce using rule 138 (term)

    mulop  go to state 144


State 77

  140 factor: primary •
  141       | primary • SYM_UPARROW factor

    SYM_UPARROW  shift, and go to state 145

    $default  reduce using rule 140 (factor)


State 78

  145 primary: incr •

    $default  reduce using rule 145 (primary)


State 79

  149 incr: incrop • lval

    SYM_IDENT  shift, and go to state 25

    lval     go to state 146
    ar_lval  go to state 69
    at_lval  go to state 70
    id       go to state 147


State 80

  146 primary: unop • primary

    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    lval     go to state 148
    ar_lval  go to state 69
    at_lval  go to state 70
    primary  go to state 149
    incr     go to state 78
    incrop   go to state 79
    unop     go to state 80
    id       go to state 81
    num      go to state 82
    string   go to state 83


State 81

  125 lval: id •
  147 primary: id • SYM_LPAREN actuals SYM_RPAREN

    SYM_LPAREN  shift, and go to state 150

    $default  reduce using rule 125 (lval)


State 82

  143 primary: num •

    $default  reduce using rule 143 (primary)


State 83

  144 primary: string •

    $default  reduce using rule 144 (primary)


State 84

    5 defs: def defs •

    $default  reduce using rule 5 (defs)


State 85

   15 var_decl: type var_list • SYM_SEMICOLON

    SYM_SEMICOLON  shift, and go to state 151


State 86

   36 var_list: var •
   37         | var • SYM_COMMA var_list

    SYM_COMMA  shift, and go to state 152

    $default  reduce using rule 36 (var_list)


State 87

   38 var: id •
   39    | id • SYM_LBRACK aspec SYM_RBRACK
   51 func_hdr: type id • $@2 SYM_LPAREN formals SYM_RPAREN

    SYM_LBRACK  shift, and go to state 153

    SYM_LPAREN  reduce using rule 50 ($@2)
    $default    reduce using rule 38 (var)

    $@2  go to state 154


State 88

   14 type_decl: struct_type SYM_SEMICOLON •

    $default  reduce using rule 14 (type_decl)


State 89

   46 func_decl: func_hdr SYM_SEMICOLON •

    $default  reduce using rule 46 (func_decl)


State 90

   49 func_def: func_hdr $@1 • func_body

    SYM_LBRACE  shift, and go to state 155

    func_body  go to state 156


State 91

   47 func_decl: func_hdr id • SYM_SEMICOLON

    SYM_SEMICOLON  shift, and go to state 157


State 92

   30 struct_type: SYM_STRUCT id SYM_LBRACE • field_list SYM_RBRACE

    SYM_ATOM      shift, and go to state 1
    SYM_BOUNDS    shift, and go to state 2
    SYM_FILE      shift, and go to state 3
    SYM_FLOAT     shift, and go to state 4
    SYM_INT       shift, and go to state 5
    SYM_MATRIX    shift, and go to state 6
    SYM_MOLECULE  shift, and go to state 7
    SYM_POINT     shift, and go to state 8
    SYM_RESIDUE   shift, and go to state 9
    SYM_SIZE_T    shift, and go to state 10
    SYM_STRING    shift, and go to state 11

    simple_type  go to state 158
    field_list   go to state 159
    field        go to state 160


State 93

   80 alloc_stmt: SYM_ALLOCATE expr • SYM_SEMICOLON

    SYM_SEMICOLON  shift, and go to state 161


State 94

   81 assert_stmt: SYM_ASSERT expr • SYM_SEMICOLON

    SYM_SEMICOLON  shift, and go to state 162


State 95

   82 break_stmt: SYM_BREAK SYM_SEMICOLON •

    $default  reduce using rule 82 (break_stmt)


State 96

   85 continue_stmt: SYM_CONTINUE SYM_SEMICOLON •

    $default  reduce using rule 85 (continue_stmt)


State 97

   86 dealloc_stmt: SYM_DEALLOCATE expr • SYM_SEMICOLON

    SYM_SEMICOLON  shift, and go to state 163


State 98

  119 dbg_list: SYM_LPAREN • e_list SYM_RPAREN
  148 primary: SYM_LPAREN • expr SYM_RPAREN

    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    e_list   go to state 164
    expr     go to state 165
    lval     go to state 68
    ar_lval  go to state 69
    at_lval  go to state 70
    rval     go to state 71
    disj     go to state 72
    conj     go to state 73
    a_expr   go to state 74
    term     go to state 75
    factor   go to state 76
    primary  go to state 77
    incr     go to state 78
    incrop   go to state 79
    unop     go to state 80
    id       go to state 81
    num      go to state 82
    string   go to state 83


State 99

   87 debug_stmt: SYM_DEBUG dbg_list • SYM_SEMICOLON

    SYM_SEMICOLON  shift, and go to state 166


State 100

  120 dbg_list: e_list •

    $default  reduce using rule 120 (dbg_list)


State 101

  121 e_list: expr •
  122       | expr • SYM_COMMA e_list

    SYM_COMMA  shift, and go to state 167

    $default  reduce using rule 121 (e_list)


State 102

   88 delete_stmt: SYM_DELETE expr • SYM_SEMICOLON

    SYM_SEMICOLON  shift, and go to state 168


State 103

  104 for_hdr: SYM_FOR $@13 • SYM_LPAREN $@14 for_ctrl SYM_RPAREN

    SYM_LPAREN  shift, and go to state 169


State 104

  101 if_hdr: SYM_IF $@10 • SYM_LPAREN $@11 expr @12 SYM_RPAREN

    SYM_LPAREN  shift, and go to state 170


State 105

   84 cmpd_stmt: SYM_LBRACE $@6 • stmts SYM_RBRACE

    SYM_ALLOCATE     shift, and go to state 28
    SYM_ASSERT       shift, and go to state 29
    SYM_BREAK        shift, and go to state 30
    SYM_CONTINUE     shift, and go to state 31
    SYM_DEALLOCATE   shift, and go to state 32
    SYM_DEBUG        shift, and go to state 33
    SYM_DELETE       shift, and go to state 34
    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_FOR          shift, and go to state 36
    SYM_IDENT        shift, and go to state 25
    SYM_IF           shift, and go to state 37
    SYM_INT_LIT      shift, and go to state 38
    SYM_LBRACE       shift, and go to state 39
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_RETURN       shift, and go to state 45
    SYM_STRING_LIT   shift, and go to state 46
    SYM_WHILE        shift, and go to state 47

    stmts          go to state 171
    stmt           go to state 50
    alloc_stmt     go to state 51
    assert_stmt    go to state 52
    break_stmt     go to state 53
    cmpd_stmt      go to state 54
    continue_stmt  go to state 55
    dealloc_stmt   go to state 56
    debug_stmt     go to state 57
    delete_stmt    go to state 58
    expr_stmt      go to state 59
    if_stmt        go to state 60
    for_stmt       go to state 61
    return_stmt    go to state 62
    while_stmt     go to state 63
    if_hdr         go to state 64
    for_hdr        go to state 65
    while_hdr      go to state 66
    expr           go to state 67
    lval           go to state 68
    ar_lval        go to state 69
    at_lval        go to state 70
    rval           go to state 71
    disj           go to state 72
    conj           go to state 73
    a_expr         go to state 74
    term           go to state 75
    factor         go to state 76
    primary        go to state 77
    incr           go to state 78
    incrop         go to state 79
    unop           go to state 80
    id             go to state 81
    num            go to state 82
    string         go to state 83


State 106

  148 primary: SYM_LPAREN expr • SYM_RPAREN

    SYM_RPAREN  shift, and go to state 172


State 107

   96 return_stmt: SYM_RETURN $@8 • expr $@9 SYM_SEMICOLON

    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    expr     go to state 173
    lval     go to state 68
    ar_lval  go to state 69
    at_lval  go to state 70
    rval     go to state 71
    disj     go to state 72
    conj     go to state 73
    a_expr   go to state 74
    term     go to state 75
    factor   go to state 76
    primary  go to state 77
    incr     go to state 78
    incrop   go to state 79
    unop     go to state 80
    id       go to state 81
    num      go to state 82
    string   go to state 83


State 108

  118 while_hdr: SYM_WHILE $@17 • SYM_LPAREN $@18 expr @19 SYM_RPAREN

    SYM_LPAREN  shift, and go to state 174


State 109

    9 stmts: stmts stmt •

    $default  reduce using rule 9 (stmts)


State 110

   90 if_stmt: if_hdr stmt •
   92        | if_hdr stmt • SYM_ELSE $@7 stmt

    SYM_ELSE  shift, and go to state 175

    SYM_ELSE  [reduce using rule 90 (if_stmt)]
    $default  reduce using rule 90 (if_stmt)


State 111

   93 for_stmt: for_hdr stmt •

    $default  reduce using rule 93 (for_stmt)


State 112

   97 while_stmt: while_hdr stmt •

    $default  reduce using rule 97 (while_stmt)


State 113

   89 expr_stmt: expr SYM_SEMICOLON •

    $default  reduce using rule 89 (expr_stmt)


State 114

  158 assignop: SYM_ASSIGN •

    $default  reduce using rule 158 (assignop)


State 115

  128 ar_lval: lval SYM_LBRACK • i_list SYM_RBRACK

    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    expr     go to state 176
    lval     go to state 68
    ar_lval  go to state 69
    at_lval  go to state 70
    rval     go to state 71
    disj     go to state 72
    conj     go to state 73
    a_expr   go to state 74
    term     go to state 75
    factor   go to state 76
    primary  go to state 77
    incr     go to state 78
    i_list   go to state 177
    incrop   go to state 79
    unop     go to state 80
    id       go to state 81
    num      go to state 82
    string   go to state 83


State 116

  160 assignop: SYM_MINUS_ASSIGN •

    $default  reduce using rule 160 (assignop)


State 117

  163 assignop: SYM_MODULUS_ASSIGN •

    $default  reduce using rule 163 (assignop)


State 118

  129 at_lval: lval SYM_PERIOD • SYM_IDENT

    SYM_IDENT  shift, and go to state 178


State 119

  159 assignop: SYM_PLUS_ASSIGN •

    $default  reduce using rule 159 (assignop)


State 120

  162 assignop: SYM_SLASH_ASSIGN •

    $default  reduce using rule 162 (assignop)


State 121

  161 assignop: SYM_STAR_ASSIGN •

    $default  reduce using rule 161 (assignop)


State 122

  164 assignop: SYM_UPARROW_ASSIGN •

    $default  reduce using rule 164 (assignop)


State 123

  124 expr: lval assignop • expr

    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    expr     go to state 179
    lval     go to state 68
    ar_lval  go to state 69
    at_lval  go to state 70
    rval     go to state 71
    disj     go to state 72
    conj     go to state 73
    a_expr   go to state 74
    term     go to state 75
    factor   go to state 76
    primary  go to state 77
    incr     go to state 78
    incrop   go to state 79
    unop     go to state 80
    id       go to state 81
    num      go to state 82
    string   go to state 83


State 124

  150 incr: lval incrop •

    $default  reduce using rule 150 (incr)


State 125

  131 rval: disj SYM_OR • rval

    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    lval     go to state 148
    ar_lval  go to state 69
    at_lval  go to state 70
    rval     go to state 180
    disj     go to state 72
    conj     go to state 73
    a_expr   go to state 74
    term     go to state 75
    factor   go to state 76
    primary  go to state 77
    incr     go to state 78
    incrop   go to state 79
    unop     go to state 80
    id       go to state 81
    num      go to state 82
    string   go to state 83


State 126

  133 disj: conj SYM_AND • disj

    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    lval     go to state 148
    ar_lval  go to state 69
    at_lval  go to state 70
    disj     go to state 181
    conj     go to state 73
    a_expr   go to state 74
    term     go to state 75
    factor   go to state 76
    primary  go to state 77
    incr     go to state 78
    incrop   go to state 79
    unop     go to state 80
    id       go to state 81
    num      go to state 82
    string   go to state 83


State 127

  172 relop: SYM_DONT_MATCH •

    $default  reduce using rule 172 (relop)


State 128

  167 relop: SYM_EQUAL •

    $default  reduce using rule 167 (relop)


State 129

  170 relop: SYM_GREATER •

    $default  reduce using rule 170 (relop)


State 130

  169 relop: SYM_GREATER_EQUAL •

    $default  reduce using rule 169 (relop)


State 131

  173 relop: SYM_IN •

    $default  reduce using rule 173 (relop)


State 132

  165 relop: SYM_LESS •

    $default  reduce using rule 165 (relop)


State 133

  166 relop: SYM_LESS_EQUAL •

    $default  reduce using rule 166 (relop)


State 134

  171 relop: SYM_MATCH •

    $default  reduce using rule 171 (relop)


State 135

  168 relop: SYM_NOT_EQUAL •

    $default  reduce using rule 168 (relop)


State 136

  135 conj: a_expr relop • a_expr

    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    lval     go to state 148
    ar_lval  go to state 69
    at_lval  go to state 70
    a_expr   go to state 182
    term     go to state 75
    factor   go to state 76
    primary  go to state 77
    incr     go to state 78
    incrop   go to state 79
    unop     go to state 80
    id       go to state 81
    num      go to state 82
    string   go to state 83


State 137

  175 addop: SYM_MINUS •

    $default  reduce using rule 175 (addop)


State 138

  174 addop: SYM_PLUS •

    $default  reduce using rule 174 (addop)


State 139

  137 a_expr: term addop • a_expr

    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    lval     go to state 148
    ar_lval  go to state 69
    at_lval  go to state 70
    a_expr   go to state 183
    term     go to state 75
    factor   go to state 76
    primary  go to state 77
    incr     go to state 78
    incrop   go to state 79
    unop     go to state 80
    id       go to state 81
    num      go to state 82
    string   go to state 83


State 140

  179 mulop: SYM_ATSIGN •

    $default  reduce using rule 179 (mulop)


State 141

  178 mulop: SYM_MODULUS •

    $default  reduce using rule 178 (mulop)


State 142

  177 mulop: SYM_SLASH •

    $default  reduce using rule 177 (mulop)


State 143

  176 mulop: SYM_STAR •

    $default  reduce using rule 176 (mulop)


State 144

  139 term: factor mulop • term

    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    lval     go to state 148
    ar_lval  go to state 69
    at_lval  go to state 70
    term     go to state 184
    factor   go to state 76
    primary  go to state 77
    incr     go to state 78
    incrop   go to state 79
    unop     go to state 80
    id       go to state 81
    num      go to state 82
    string   go to state 83


State 145

  141 factor: primary SYM_UPARROW • factor

    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    lval     go to state 148
    ar_lval  go to state 69
    at_lval  go to state 70
    factor   go to state 185
    primary  go to state 77
    incr     go to state 78
    incrop   go to state 79
    unop     go to state 80
    id       go to state 81
    num      go to state 82
    string   go to state 83


State 146

  128 ar_lval: lval • SYM_LBRACK i_list SYM_RBRACK
  129 at_lval: lval • SYM_PERIOD SYM_IDENT
  149 incr: incrop lval •

    SYM_LBRACK  shift, and go to state 115
    SYM_PERIOD  shift, and go to state 118

    $default  reduce using rule 149 (incr)


State 147

  125 lval: id •

    $default  reduce using rule 125 (lval)


State 148

  128 ar_lval: lval • SYM_LBRACK i_list SYM_RBRACK
  129 at_lval: lval • SYM_PERIOD SYM_IDENT
  142 primary: lval •
  150 incr: lval • incrop

    SYM_LBRACK       shift, and go to state 115
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_PERIOD       shift, and go to state 118
    SYM_PLUS_PLUS    shift, and go to state 44

    $default  reduce using rule 142 (primary)

    incrop  go to state 124


State 149

  146 primary: unop primary •

    $default  reduce using rule 146 (primary)


State 150

  147 primary: id SYM_LPAREN • actuals SYM_RPAREN

    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    $default  reduce using rule 152 (actuals)

    expr     go to state 186
    lval     go to state 68
    ar_lval  go to state 69
    at_lval  go to state 70
    rval     go to state 71
    disj     go to state 72
    conj     go to state 73
    a_expr   go to state 74
    term     go to state 75
    factor   go to state 76
    primary  go to state 77
    incr     go to state 78
    actuals  go to state 187
    ap_list  go to state 188
    a_parm   go to state 189
    incrop   go to state 79
    unop     go to state 80
    id       go to state 81
    num      go to state 82
    string   go to state 83


State 151

   15 var_decl: type var_list SYM_SEMICOLON •

    $default  reduce using rule 15 (var_decl)


State 152

   37 var_list: var SYM_COMMA • var_list

    SYM_IDENT  shift, and go to state 25

    var_list  go to state 190
    var       go to state 86
    id        go to state 191


State 153

   39 var: id SYM_LBRACK • aspec SYM_RBRACK

    SYM_DYNAMIC      shift, and go to state 192
    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_HASHED       shift, and go to state 193
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    aspec    go to state 194
    as_list  go to state 195
    asize    go to state 196
    expr     go to state 197
    lval     go to state 68
    ar_lval  go to state 69
    at_lval  go to state 70
    rval     go to state 71
    disj     go to state 72
    conj     go to state 73
    a_expr   go to state 74
    term     go to state 75
    factor   go to state 76
    primary  go to state 77
    incr     go to state 78
    incrop   go to state 79
    unop     go to state 80
    id       go to state 81
    num      go to state 82
    string   go to state 83


State 154

   51 func_hdr: type id $@2 • SYM_LPAREN formals SYM_RPAREN

    SYM_LPAREN  shift, and go to state 198


State 155

   60 func_body: SYM_LBRACE • $@3 f_defpart $@4 f_stmtpart SYM_RBRACE $@5 SYM_SEMICOLON

    $default  reduce using rule 57 ($@3)

    $@3  go to state 199


State 156

   49 func_def: func_hdr $@1 func_body •

    $default  reduce using rule 49 (func_def)


State 157

   47 func_decl: func_hdr id SYM_SEMICOLON •

    $default  reduce using rule 47 (func_decl)


State 158

   33 field: simple_type • id_list SYM_SEMICOLON

    SYM_IDENT  shift, and go to state 25

    id_list  go to state 200
    id       go to state 201


State 159

   30 struct_type: SYM_STRUCT id SYM_LBRACE field_list • SYM_RBRACE

    SYM_RBRACE  shift, and go to state 202


State 160

   31 field_list: field •
   32           | field • field_list

    SYM_ATOM      shift, and go to state 1
    SYM_BOUNDS    shift, and go to state 2
    SYM_FILE      shift, and go to state 3
    SYM_FLOAT     shift, and go to state 4
    SYM_INT       shift, and go to state 5
    SYM_MATRIX    shift, and go to state 6
    SYM_MOLECULE  shift, and go to state 7
    SYM_POINT     shift, and go to state 8
    SYM_RESIDUE   shift, and go to state 9
    SYM_SIZE_T    shift, and go to state 10
    SYM_STRING    shift, and go to state 11

    $default  reduce using rule 31 (field_list)

    simple_type  go to state 158
    field_list   go to state 203
    field        go to state 160


State 161

   80 alloc_stmt: SYM_ALLOCATE expr SYM_SEMICOLON •

    $default  reduce using rule 80 (alloc_stmt)


State 162

   81 assert_stmt: SYM_ASSERT expr SYM_SEMICOLON •

    $default  reduce using rule 81 (assert_stmt)


State 163

   86 dealloc_stmt: SYM_DEALLOCATE expr SYM_SEMICOLON •

    $default  reduce using rule 86 (dealloc_stmt)


State 164

  119 dbg_list: SYM_LPAREN e_list • SYM_RPAREN

    SYM_RPAREN  shift, and go to state 204


State 165

  121 e_list: expr •
  122       | expr • SYM_COMMA e_list
  148 primary: SYM_LPAREN expr • SYM_RPAREN

    SYM_COMMA   shift, and go to state 167
    SYM_RPAREN  shift, and go to state 172

    SYM_RPAREN  [reduce using rule 121 (e_list)]


State 166

   87 debug_stmt: SYM_DEBUG dbg_list SYM_SEMICOLON •

    $default  reduce using rule 87 (debug_stmt)


State 167

  122 e_list: expr SYM_COMMA • e_list

    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    e_list   go to state 205
    expr     go to state 101
    lval     go to state 68
    ar_lval  go to state 69
    at_lval  go to state 70
    rval     go to state 71
    disj     go to state 72
    conj     go to state 73
    a_expr   go to state 74
    term     go to state 75
    factor   go to state 76
    primary  go to state 77
    incr     go to state 78
    incrop   go to state 79
    unop     go to state 80
    id       go to state 81
    num      go to state 82
    string   go to state 83


State 168

   88 delete_stmt: SYM_DELETE expr SYM_SEMICOLON •

    $default  reduce using rule 88 (delete_stmt)


State 169

  104 for_hdr: SYM_FOR $@13 SYM_LPAREN • $@14 for_ctrl SYM_RPAREN

    $default  reduce using rule 103 ($@14)

    $@14  go to state 206


State 170

  101 if_hdr: SYM_IF $@10 SYM_LPAREN • $@11 expr @12 SYM_RPAREN

    $default  reduce using rule 99 ($@11)

    $@11  go to state 207


State 171

    9 stmts: stmts • stmt
   84 cmpd_stmt: SYM_LBRACE $@6 stmts • SYM_RBRACE

    SYM_ALLOCATE     shift, and go to state 28
    SYM_ASSERT       shift, and go to state 29
    SYM_BREAK        shift, and go to state 30
    SYM_CONTINUE     shift, and go to state 31
    SYM_DEALLOCATE   shift, and go to state 32
    SYM_DEBUG        shift, and go to state 33
    SYM_DELETE       shift, and go to state 34
    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_FOR          shift, and go to state 36
    SYM_IDENT        shift, and go to state 25
    SYM_IF           shift, and go to state 37
    SYM_INT_LIT      shift, and go to state 38
    SYM_LBRACE       shift, and go to state 39
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_RBRACE       shift, and go to state 208
    SYM_RETURN       shift, and go to state 45
    SYM_STRING_LIT   shift, and go to state 46
    SYM_WHILE        shift, and go to state 47

    stmt           go to state 109
    alloc_stmt     go to state 51
    assert_stmt    go to state 52
    break_stmt     go to state 53
    cmpd_stmt      go to state 54
    continue_stmt  go to state 55
    dealloc_stmt   go to state 56
    debug_stmt     go to state 57
    delete_stmt    go to state 58
    expr_stmt      go to state 59
    if_stmt        go to state 60
    for_stmt       go to state 61
    return_stmt    go to state 62
    while_stmt     go to state 63
    if_hdr         go to state 64
    for_hdr        go to state 65
    while_hdr      go to state 66
    expr           go to state 67
    lval           go to state 68
    ar_lval        go to state 69
    at_lval        go to state 70
    rval           go to state 71
    disj           go to state 72
    conj           go to state 73
    a_expr         go to state 74
    term           go to state 75
    factor         go to state 76
    primary        go to state 77
    incr           go to state 78
    incrop         go to state 79
    unop           go to state 80
    id             go to state 81
    num            go to state 82
    string         go to state 83


State 172

  148 primary: SYM_LPAREN expr SYM_RPAREN •

    $default  reduce using rule 148 (primary)


State 173

   96 return_stmt: SYM_RETURN $@8 expr • $@9 SYM_SEMICOLON

    $default  reduce using rule 95 ($@9)

    $@9  go to state 209


State 174

  118 while_hdr: SYM_WHILE $@17 SYM_LPAREN • $@18 expr @19 SYM_RPAREN

    $default  reduce using rule 116 ($@18)

    $@18  go to state 210


State 175

   92 if_stmt: if_hdr stmt SYM_ELSE • $@7 stmt

    $default  reduce using rule 91 ($@7)

    $@7  go to state 211


State 176

  156 i_list: expr •
  157       | expr • SYM_COMMA i_list

    SYM_COMMA  shift, and go to state 212

    $default  reduce using rule 156 (i_list)


State 177

  128 ar_lval: lval SYM_LBRACK i_list • SYM_RBRACK

    SYM_RBRACK  shift, and go to state 213


State 178

  129 at_lval: lval SYM_PERIOD SYM_IDENT •

    $default  reduce using rule 129 (at_lval)


State 179

  124 expr: lval assignop expr •

    $default  reduce using rule 124 (expr)


State 180

  131 rval: disj SYM_OR rval •

    $default  reduce using rule 131 (rval)


State 181

  133 disj: conj SYM_AND disj •

    $default  reduce using rule 133 (disj)


State 182

  135 conj: a_expr relop a_expr •

    $default  reduce using rule 135 (conj)


State 183

  137 a_expr: term addop a_expr •

    $default  reduce using rule 137 (a_expr)


State 184

  139 term: factor mulop term •

    $default  reduce using rule 139 (term)


State 185

  141 factor: primary SYM_UPARROW factor •

    $default  reduce using rule 141 (factor)


State 186

  155 a_parm: expr •

    $default  reduce using rule 155 (a_parm)


State 187

  147 primary: id SYM_LPAREN actuals • SYM_RPAREN

    SYM_RPAREN  shift, and go to state 214


State 188

  151 actuals: ap_list •

    $default  reduce using rule 151 (actuals)


State 189

  153 ap_list: a_parm •
  154        | a_parm • SYM_COMMA ap_list

    SYM_COMMA  shift, and go to state 215

    $default  reduce using rule 153 (ap_list)


State 190

   37 var_list: var SYM_COMMA var_list •

    $default  reduce using rule 37 (var_list)


State 191

   38 var: id •
   39    | id • SYM_LBRACK aspec SYM_RBRACK

    SYM_LBRACK  shift, and go to state 153

    $default  reduce using rule 38 (var)


State 192

   45 asize: SYM_DYNAMIC •

    $default  reduce using rule 45 (asize)


State 193

   41 aspec: SYM_HASHED •

    $default  reduce using rule 41 (aspec)


State 194

   39 var: id SYM_LBRACK aspec • SYM_RBRACK

    SYM_RBRACK  shift, and go to state 216


State 195

   40 aspec: as_list •

    $default  reduce using rule 40 (aspec)


State 196

   42 as_list: asize •
   43        | asize • SYM_COMMA as_list

    SYM_COMMA  shift, and go to state 217

    $default  reduce using rule 42 (as_list)


State 197

   44 asize: expr •

    $default  reduce using rule 44 (asize)


State 198

   51 func_hdr: type id $@2 SYM_LPAREN • formals SYM_RPAREN

    SYM_ATOM      shift, and go to state 1
    SYM_BOUNDS    shift, and go to state 2
    SYM_FILE      shift, and go to state 3
    SYM_FLOAT     shift, and go to state 4
    SYM_INT       shift, and go to state 5
    SYM_MATRIX    shift, and go to state 6
    SYM_MOLECULE  shift, and go to state 7
    SYM_POINT     shift, and go to state 8
    SYM_RESIDUE   shift, and go to state 9
    SYM_SIZE_T    shift, and go to state 10
    SYM_STRING    shift, and go to state 11
    SYM_STRUCT    shift, and go to state 12

    $default  reduce using rule 53 (formals)

    type         go to state 218
    simple_type  go to state 20
    struct_type  go to state 219
    formals      go to state 220
    fp_list      go to state 221
    f_parm       go to state 222


State 199

   60 func_body: SYM_LBRACE $@3 • f_defpart $@4 f_stmtpart SYM_RBRACE $@5 SYM_SEMICOLON

    SYM_ATOM      shift, and go to state 1
    SYM_BOUNDS    shift, and go to state 2
    SYM_FILE      shift, and go to state 3
    SYM_FLOAT     shift, and go to state 4
    SYM_INT       shift, and go to state 5
    SYM_MATRIX    shift, and go to state 6
    SYM_MOLECULE  shift, and go to state 7
    SYM_POINT     shift, and go to state 8
    SYM_RESIDUE   shift, and go to state 9
    SYM_SIZE_T    shift, and go to state 10
    SYM_STRING    shift, and go to state 11
    SYM_STRUCT    shift, and go to state 12

    $default  reduce using rule 62 (f_defpart)

    var_decl     go to state 223
    type         go to state 224
    simple_type  go to state 20
    struct_type  go to state 219
    f_defpart    go to state 225
    lv_decls     go to state 226


State 200

   33 field: simple_type id_list • SYM_SEMICOLON

    SYM_SEMICOLON  shift, and go to state 227


State 201

   34 id_list: id •
   35        | id • SYM_COMMA id_list

    SYM_COMMA  shift, and go to state 228

    $default  reduce using rule 34 (id_list)


State 202

   30 struct_type: SYM_STRUCT id SYM_LBRACE field_list SYM_RBRACE •

    $default  reduce using rule 30 (struct_type)


State 203

   32 field_list: field field_list •

    $default  reduce using rule 32 (field_list)


State 204

  119 dbg_list: SYM_LPAREN e_list SYM_RPAREN •

    $default  reduce using rule 119 (dbg_list)


State 205

  122 e_list: expr SYM_COMMA e_list •

    $default  reduce using rule 122 (e_list)


State 206

  104 for_hdr: SYM_FOR $@13 SYM_LPAREN $@14 • for_ctrl SYM_RPAREN

    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    $default  reduce using rule 112 (for_expr)

    for_ctrl   go to state 229
    for_in     go to state 230
    for_count  go to state 231
    for_expr   go to state 232
    expr       go to state 233
    lval       go to state 68
    ar_lval    go to state 69
    at_lval    go to state 70
    rval       go to state 71
    disj       go to state 72
    conj       go to state 73
    a_expr     go to state 74
    term       go to state 75
    factor     go to state 76
    primary    go to state 77
    incr       go to state 78
    incrop     go to state 79
    unop       go to state 80
    id         go to state 234
    num        go to state 82
    string     go to state 83


State 207

  101 if_hdr: SYM_IF $@10 SYM_LPAREN $@11 • expr @12 SYM_RPAREN

    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    expr     go to state 235
    lval     go to state 68
    ar_lval  go to state 69
    at_lval  go to state 70
    rval     go to state 71
    disj     go to state 72
    conj     go to state 73
    a_expr   go to state 74
    term     go to state 75
    factor   go to state 76
    primary  go to state 77
    incr     go to state 78
    incrop   go to state 79
    unop     go to state 80
    id       go to state 81
    num      go to state 82
    string   go to state 83


State 208

   84 cmpd_stmt: SYM_LBRACE $@6 stmts SYM_RBRACE •

    $default  reduce using rule 84 (cmpd_stmt)


State 209

   96 return_stmt: SYM_RETURN $@8 expr $@9 • SYM_SEMICOLON

    SYM_SEMICOLON  shift, and go to state 236


State 210

  118 while_hdr: SYM_WHILE $@17 SYM_LPAREN $@18 • expr @19 SYM_RPAREN

    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    expr     go to state 237
    lval     go to state 68
    ar_lval  go to state 69
    at_lval  go to state 70
    rval     go to state 71
    disj     go to state 72
    conj     go to state 73
    a_expr   go to state 74
    term     go to state 75
    factor   go to state 76
    primary  go to state 77
    incr     go to state 78
    incrop   go to state 79
    unop     go to state 80
    id       go to state 81
    num      go to state 82
    string   go to state 83


State 211

   92 if_stmt: if_hdr stmt SYM_ELSE $@7 • stmt

    SYM_ALLOCATE     shift, and go to state 28
    SYM_ASSERT       shift, and go to state 29
    SYM_BREAK        shift, and go to state 30
    SYM_CONTINUE     shift, and go to state 31
    SYM_DEALLOCATE   shift, and go to state 32
    SYM_DEBUG        shift, and go to state 33
    SYM_DELETE       shift, and go to state 34
    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_FOR          shift, and go to state 36
    SYM_IDENT        shift, and go to state 25
    SYM_IF           shift, and go to state 37
    SYM_INT_LIT      shift, and go to state 38
    SYM_LBRACE       shift, and go to state 39
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_RETURN       shift, and go to state 45
    SYM_STRING_LIT   shift, and go to state 46
    SYM_WHILE        shift, and go to state 47

    stmt           go to state 238
    alloc_stmt     go to state 51
    assert_stmt    go to state 52
    break_stmt     go to state 53
    cmpd_stmt      go to state 54
    continue_stmt  go to state 55
    dealloc_stmt   go to state 56
    debug_stmt     go to state 57
    delete_stmt    go to state 58
    expr_stmt      go to state 59
    if_stmt        go to state 60
    for_stmt       go to state 61
    return_stmt    go to state 62
    while_stmt     go to state 63
    if_hdr         go to state 64
    for_hdr        go to state 65
    while_hdr      go to state 66
    expr           go to state 67
    lval           go to state 68
    ar_lval        go to state 69
    at_lval        go to state 70
    rval           go to state 71
    disj           go to state 72
    conj           go to state 73
    a_expr         go to state 74
    term           go to state 75
    factor         go to state 76
    primary        go to state 77
    incr           go to state 78
    incrop         go to state 79
    unop           go to state 80
    id             go to state 81
    num            go to state 82
    string         go to state 83


State 212

  157 i_list: expr SYM_COMMA • i_list

    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    expr     go to state 176
    lval     go to state 68
    ar_lval  go to state 69
    at_lval  go to state 70
    rval     go to state 71
    disj     go to state 72
    conj     go to state 73
    a_expr   go to state 74
    term     go to state 75
    factor   go to state 76
    primary  go to state 77
    incr     go to state 78
    i_list   go to state 239
    incrop   go to state 79
    unop     go to state 80
    id       go to state 81
    num      go to state 82
    string   go to state 83


State 213

  128 ar_lval: lval SYM_LBRACK i_list SYM_RBRACK •

    $default  reduce using rule 128 (ar_lval)


State 214

  147 primary: id SYM_LPAREN actuals SYM_RPAREN •

    $default  reduce using rule 147 (primary)


State 215

  154 ap_list: a_parm SYM_COMMA • ap_list

    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    expr     go to state 186
    lval     go to state 68
    ar_lval  go to state 69
    at_lval  go to state 70
    rval     go to state 71
    disj     go to state 72
    conj     go to state 73
    a_expr   go to state 74
    term     go to state 75
    factor   go to state 76
    primary  go to state 77
    incr     go to state 78
    ap_list  go to state 240
    a_parm   go to state 189
    incrop   go to state 79
    unop     go to state 80
    id       go to state 81
    num      go to state 82
    string   go to state 83


State 216

   39 var: id SYM_LBRACK aspec SYM_RBRACK •

    $default  reduce using rule 39 (var)


State 217

   43 as_list: asize SYM_COMMA • as_list

    SYM_DYNAMIC      shift, and go to state 192
    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    as_list  go to state 241
    asize    go to state 196
    expr     go to state 197
    lval     go to state 68
    ar_lval  go to state 69
    at_lval  go to state 70
    rval     go to state 71
    disj     go to state 72
    conj     go to state 73
    a_expr   go to state 74
    term     go to state 75
    factor   go to state 76
    primary  go to state 77
    incr     go to state 78
    incrop   go to state 79
    unop     go to state 80
    id       go to state 81
    num      go to state 82
    string   go to state 83


State 218

   56 f_parm: type • var

    SYM_IDENT  shift, and go to state 25

    var  go to state 242
    id   go to state 191


State 219

   17 type: struct_type •

    $default  reduce using rule 17 (type)


State 220

   51 func_hdr: type id $@2 SYM_LPAREN formals • SYM_RPAREN

    SYM_RPAREN  shift, and go to state 243


State 221

   52 formals: fp_list •

    $default  reduce using rule 52 (formals)


State 222

   54 fp_list: f_parm •
   55        | f_parm • SYM_COMMA fp_list

    SYM_COMMA  shift, and go to state 244

    $default  reduce using rule 54 (fp_list)


State 223

   63 lv_decls: var_decl •

    $default  reduce using rule 63 (lv_decls)


State 224

   15 var_decl: type • var_list SYM_SEMICOLON

    SYM_IDENT  shift, and go to state 25

    var_list  go to state 85
    var       go to state 86
    id        go to state 191


State 225

   60 func_body: SYM_LBRACE $@3 f_defpart • $@4 f_stmtpart SYM_RBRACE $@5 SYM_SEMICOLON

    $default  reduce using rule 58 ($@4)

    $@4  go to state 245


State 226

   61 f_defpart: lv_decls •
   64 lv_decls: lv_decls • var_decl

    SYM_ATOM      shift, and go to state 1
    SYM_BOUNDS    shift, and go to state 2
    SYM_FILE      shift, and go to state 3
    SYM_FLOAT     shift, and go to state 4
    SYM_INT       shift, and go to state 5
    SYM_MATRIX    shift, and go to state 6
    SYM_MOLECULE  shift, and go to state 7
    SYM_POINT     shift, and go to state 8
    SYM_RESIDUE   shift, and go to state 9
    SYM_SIZE_T    shift, and go to state 10
    SYM_STRING    shift, and go to state 11
    SYM_STRUCT    shift, and go to state 12

    $default  reduce using rule 61 (f_defpart)

    var_decl     go to state 246
    type         go to state 224
    simple_type  go to state 20
    struct_type  go to state 219


State 227

   33 field: simple_type id_list SYM_SEMICOLON •

    $default  reduce using rule 33 (field)


State 228

   35 id_list: id SYM_COMMA • id_list

    SYM_IDENT  shift, and go to state 25

    id_list  go to state 247
    id       go to state 201


State 229

  104 for_hdr: SYM_FOR $@13 SYM_LPAREN $@14 for_ctrl • SYM_RPAREN

    SYM_RPAREN  shift, and go to state 248


State 230

  105 for_ctrl: for_in •

    $default  reduce using rule 105 (for_ctrl)


State 231

  106 for_ctrl: for_count •

    $default  reduce using rule 106 (for_ctrl)


State 232

  110 for_count: for_expr • SYM_SEMICOLON $@15 for_test_expr SYM_SEMICOLON $@16 for_expr

    SYM_SEMICOLON  shift, and go to state 249


State 233

  111 for_expr: expr •

    $default  reduce using rule 111 (for_expr)


State 234

  107 for_in: id • SYM_IN id
  125 lval: id •
  147 primary: id • SYM_LPAREN actuals SYM_RPAREN

    SYM_IN      shift, and go to state 250
    SYM_LPAREN  shift, and go to state 150

    SYM_IN    [reduce using rule 125 (lval)]
    $default  reduce using rule 125 (lval)


State 235

  101 if_hdr: SYM_IF $@10 SYM_LPAREN $@11 expr • @12 SYM_RPAREN

    $default  reduce using rule 100 (@12)

    @12  go to state 251


State 236

   96 return_stmt: SYM_RETURN $@8 expr $@9 SYM_SEMICOLON •

    $default  reduce using rule 96 (return_stmt)


State 237

  118 while_hdr: SYM_WHILE $@17 SYM_LPAREN $@18 expr • @19 SYM_RPAREN

    $default  reduce using rule 117 (@19)

    @19  go to state 252


State 238

   92 if_stmt: if_hdr stmt SYM_ELSE $@7 stmt •

    $default  reduce using rule 92 (if_stmt)


State 239

  157 i_list: expr SYM_COMMA i_list •

    $default  reduce using rule 157 (i_list)


State 240

  154 ap_list: a_parm SYM_COMMA ap_list •

    $default  reduce using rule 154 (ap_list)


State 241

   43 as_list: asize SYM_COMMA as_list •

    $default  reduce using rule 43 (as_list)


State 242

   56 f_parm: type var •

    $default  reduce using rule 56 (f_parm)


State 243

   51 func_hdr: type id $@2 SYM_LPAREN formals SYM_RPAREN •

    $default  reduce using rule 51 (func_hdr)


State 244

   55 fp_list: f_parm SYM_COMMA • fp_list

    SYM_ATOM      shift, and go to state 1
    SYM_BOUNDS    shift, and go to state 2
    SYM_FILE      shift, and go to state 3
    SYM_FLOAT     shift, and go to state 4
    SYM_INT       shift, and go to state 5
    SYM_MATRIX    shift, and go to state 6
    SYM_MOLECULE  shift, and go to state 7
    SYM_POINT     shift, and go to state 8
    SYM_RESIDUE   shift, and go to state 9
    SYM_SIZE_T    shift, and go to state 10
    SYM_STRING    shift, and go to state 11
    SYM_STRUCT    shift, and go to state 12

    type         go to state 218
    simple_type  go to state 20
    struct_type  go to state 219
    fp_list      go to state 253
    f_parm       go to state 222


State 245

   60 func_body: SYM_LBRACE $@3 f_defpart $@4 • f_stmtpart SYM_RBRACE $@5 SYM_SEMICOLON

    SYM_ALLOCATE     shift, and go to state 28
    SYM_ASSERT       shift, and go to state 29
    SYM_BREAK        shift, and go to state 30
    SYM_CONTINUE     shift, and go to state 31
    SYM_DEALLOCATE   shift, and go to state 32
    SYM_DEBUG        shift, and go to state 33
    SYM_DELETE       shift, and go to state 34
    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_FOR          shift, and go to state 36
    SYM_IDENT        shift, and go to state 25
    SYM_IF           shift, and go to state 37
    SYM_INT_LIT      shift, and go to state 38
    SYM_LBRACE       shift, and go to state 39
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_RETURN       shift, and go to state 45
    SYM_STRING_LIT   shift, and go to state 46
    SYM_WHILE        shift, and go to state 47

    $default  reduce using rule 66 (f_stmtpart)

    stmts          go to state 254
    f_stmtpart     go to state 255
    stmt           go to state 50
    alloc_stmt     go to state 51
    assert_stmt    go to state 52
    break_stmt     go to state 53
    cmpd_stmt      go to state 54
    continue_stmt  go to state 55
    dealloc_stmt   go to state 56
    debug_stmt     go to state 57
    delete_stmt    go to state 58
    expr_stmt      go to state 59
    if_stmt        go to state 60
    for_stmt       go to state 61
    return_stmt    go to state 62
    while_stmt     go to state 63
    if_hdr         go to state 64
    for_hdr        go to state 65
    while_hdr      go to state 66
    expr           go to state 67
    lval           go to state 68
    ar_lval        go to state 69
    at_lval        go to state 70
    rval           go to state 71
    disj           go to state 72
    conj           go to state 73
    a_expr         go to state 74
    term           go to state 75
    factor         go to state 76
    primary        go to state 77
    incr           go to state 78
    incrop         go to state 79
    unop           go to state 80
    id             go to state 81
    num            go to state 82
    string         go to state 83


State 246

   64 lv_decls: lv_decls var_decl •

    $default  reduce using rule 64 (lv_decls)


State 247

   35 id_list: id SYM_COMMA id_list •

    $default  reduce using rule 35 (id_list)


State 248

  104 for_hdr: SYM_FOR $@13 SYM_LPAREN $@14 for_ctrl SYM_RPAREN •

    $default  reduce using rule 104 (for_hdr)


State 249

  110 for_count: for_expr SYM_SEMICOLON • $@15 for_test_expr SYM_SEMICOLON $@16 for_expr

    $default  reduce using rule 108 ($@15)

    $@15  go to state 256


State 250

  107 for_in: id SYM_IN • id

    SYM_IDENT  shift, and go to state 25

    id  go to state 257


State 251

  101 if_hdr: SYM_IF $@10 SYM_LPAREN $@11 expr @12 • SYM_RPAREN

    SYM_RPAREN  shift, and go to state 258


State 252

  118 while_hdr: SYM_WHILE $@17 SYM_LPAREN $@18 expr @19 • SYM_RPAREN

    SYM_RPAREN  shift, and go to state 259


State 253

   55 fp_list: f_parm SYM_COMMA fp_list •

    $default  reduce using rule 55 (fp_list)


State 254

    9 stmts: stmts • stmt
   65 f_stmtpart: stmts •

    SYM_ALLOCATE     shift, and go to state 28
    SYM_ASSERT       shift, and go to state 29
    SYM_BREAK        shift, and go to state 30
    SYM_CONTINUE     shift, and go to state 31
    SYM_DEALLOCATE   shift, and go to state 32
    SYM_DEBUG        shift, and go to state 33
    SYM_DELETE       shift, and go to state 34
    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_FOR          shift, and go to state 36
    SYM_IDENT        shift, and go to state 25
    SYM_IF           shift, and go to state 37
    SYM_INT_LIT      shift, and go to state 38
    SYM_LBRACE       shift, and go to state 39
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_RETURN       shift, and go to state 45
    SYM_STRING_LIT   shift, and go to state 46
    SYM_WHILE        shift, and go to state 47

    $default  reduce using rule 65 (f_stmtpart)

    stmt           go to state 109
    alloc_stmt     go to state 51
    assert_stmt    go to state 52
    break_stmt     go to state 53
    cmpd_stmt      go to state 54
    continue_stmt  go to state 55
    dealloc_stmt   go to state 56
    debug_stmt     go to state 57
    delete_stmt    go to state 58
    expr_stmt      go to state 59
    if_stmt        go to state 60
    for_stmt       go to state 61
    return_stmt    go to state 62
    while_stmt     go to state 63
    if_hdr         go to state 64
    for_hdr        go to state 65
    while_hdr      go to state 66
    expr           go to state 67
    lval           go to state 68
    ar_lval        go to state 69
    at_lval        go to state 70
    rval           go to state 71
    disj           go to state 72
    conj           go to state 73
    a_expr         go to state 74
    term           go to state 75
    factor         go to state 76
    primary        go to state 77
    incr           go to state 78
    incrop         go to state 79
    unop           go to state 80
    id             go to state 81
    num            go to state 82
    string         go to state 83


State 255

   60 func_body: SYM_LBRACE $@3 f_defpart $@4 f_stmtpart • SYM_RBRACE $@5 SYM_SEMICOLON

    SYM_RBRACE  shift, and go to state 260


State 256

  110 for_count: for_expr SYM_SEMICOLON $@15 • for_test_expr SYM_SEMICOLON $@16 for_expr

    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    $default  reduce using rule 114 (for_test_expr)

    for_test_expr  go to state 261
    expr           go to state 262
    lval           go to state 68
    ar_lval        go to state 69
    at_lval        go to state 70
    rval           go to state 71
    disj           go to state 72
    conj           go to state 73
    a_expr         go to state 74
    term           go to state 75
    factor         go to state 76
    primary        go to state 77
    incr           go to state 78
    incrop         go to state 79
    unop           go to state 80
    id             go to state 81
    num            go to state 82
    string         go to state 83


State 257

  107 for_in: id SYM_IN id •

    $default  reduce using rule 107 (for_in)


State 258

  101 if_hdr: SYM_IF $@10 SYM_LPAREN $@11 expr @12 SYM_RPAREN •

    $default  reduce using rule 101 (if_hdr)


State 259

  118 while_hdr: SYM_WHILE $@17 SYM_LPAREN $@18 expr @19 SYM_RPAREN •

    $default  reduce using rule 118 (while_hdr)


State 260

   60 func_body: SYM_LBRACE $@3 f_defpart $@4 f_stmtpart SYM_RBRACE • $@5 SYM_SEMICOLON

    $default  reduce using rule 59 ($@5)

    $@5  go to state 263


State 261

  110 for_count: for_expr SYM_SEMICOLON $@15 for_test_expr • SYM_SEMICOLON $@16 for_expr

    SYM_SEMICOLON  shift, and go to state 264


State 262

  113 for_test_expr: expr •

    $default  reduce using rule 113 (for_test_expr)


State 263

   60 func_body: SYM_LBRACE $@3 f_defpart $@4 f_stmtpart SYM_RBRACE $@5 • SYM_SEMICOLON

    SYM_SEMICOLON  shift, and go to state 265


State 264

  110 for_count: for_expr SYM_SEMICOLON $@15 for_test_expr SYM_SEMICOLON • $@16 for_expr

    $default  reduce using rule 109 ($@16)

    $@16  go to state 266


State 265

   60 func_body: SYM_LBRACE $@3 f_defpart $@4 f_stmtpart SYM_RBRACE $@5 SYM_SEMICOLON •

    $default  reduce using rule 60 (func_body)


State 266

  110 for_count: for_expr SYM_SEMICOLON $@15 for_test_expr SYM_SEMICOLON $@16 • for_expr

    SYM_FLOAT_LIT    shift, and go to state 35
    SYM_IDENT        shift, and go to state 25
    SYM_INT_LIT      shift, and go to state 38
    SYM_LPAREN       shift, and go to state 40
    SYM_MINUS        shift, and go to state 41
    SYM_MINUS_MINUS  shift, and go to state 42
    SYM_NOT          shift, and go to state 43
    SYM_PLUS_PLUS    shift, and go to state 44
    SYM_STRING_LIT   shift, and go to state 46

    $default  reduce using rule 112 (for_expr)

    for_expr  go to state 267
    expr      go to state 233
    lval      go to state 68
    ar_lval   go to state 69
    at_lval   go to state 70
    rval      go to state 71
    disj      go to state 72
    conj      go to state 73
    a_expr    go to state 74
    term      go to state 75
    factor    go to state 76
    primary   go to state 77
    incr      go to state 78
    incrop    go to state 79
    unop      go to state 80
    id        go to state 81
    num       go to state 82
    string    go to state 83


State 267

  110 for_count: for_expr SYM_SEMICOLON $@15 for_test_expr SYM_SEMICOLON $@16 for_expr •

    $default  reduce using rule 110 (for_count)
